!function(e){var t={};function r(n){if(t[n])return t[n].exports;var a=t[n]={i:n,l:!1,exports:{}};return e[n].call(a.exports,a,a.exports,r),a.l=!0,a.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)r.d(n,a,function(t){return e[t]}.bind(null,a));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";r.r(t);const n=[{name:"Netparser: A fast, in-place parsing library for network packets",url:"https://github.com/markrepedersen/netparser"},{name:"Automark: An automated UI testing framework",url:"https://github.com/markrepedersen/automark"},{name:"De-auth: A WIFI deauther for sending deauth frames",url:"https://github.com/markrepedersen/de-auth"},{name:"Loblaw: A layer 7 load balancer",url:"https://github.com/markrepedersen/loblaw"},{name:"Bully: An election network that elects a new coordinator using the Bully algorithm",url:"https://github.com/markrepedersen/Bully"},{name:"TManager: A distributed transaction manager",url:"https://github.com/markrepedersen/TManager"},{name:"Failure-detector: A distributed failure detector that automatically detects failures in networks' nodes",url:"https://github.com/markrepedersen/failure-detector"},{name:"Zombified: A battle royale game",url:"https://github.com/markrepedersen/zombified"},{name:"Xeros-kernel: A kernel implementation that copies the Xeros OS",url:"https://github.com/markrepedersen/xeros-kernel"},{name:"Segtree-rs: A Segment Tree implementation written in Rust",url:"https://github.com/markrepedersen/segtree-rs"},{name:"Fenwick-tree-rs: A Fenwick Tree implementation written in Rust",url:"https://github.com/markrepedersen/fenwick-tree-rs"},{name:"Trie-rs: A Trie implementation written in Rust",url:"https://github.com/markrepedersen/trie-rs"},{name:"Gradle Dependency Graph Plugin: A plugin for generating advanced Gradle task dependency graphs",url:"https://github.com/markrepedersen/gradle-dependency-graph-plugin"},{name:"Gradle Build Metrics Plugin: A plugin for generating post-build metrics",url:"https://github.com/markrepedersen/gradle-build-metrics-plugin"},{name:"Gradle Branch Plugin: A plugin for creating a code freeze branch",url:"https://github.com/markrepedersen/gradle_branch_plugin"},{name:"Emacs Configuration: My personal Emacs configuration",url:"https://github.com/markrepedersen/emacs-configuration"}],a=[{name:"GitHub",url:"https://github.com/markrepedersen",svg:"https://simpleicons.org/icons/github.svg"},{name:"LinkedIn",url:"https://www.linkedin.com/in/mark-pedersen-190098157/",svg:"https://simpleicons.org/icons/linkedin.svg"}];class i{constructor(e){this.links=e}generateAnchorTag(e){return`<a href=${e.url}>${e.name}</a>`}element(e){const t=this.links.map(e=>this.generateAnchorTag(e)).join("");e.setInnerContent(t,{html:!0})}}class s{element(e){e.setInnerContent("markrepedersen")}}class o{element(e){e.setAttribute("style","")}}class l{element(e){e.setAttribute("src","https://banner2.cleanpng.com/20180730/yr/kisspng-stick-figure-clip-art-abacus-clipart-black-and-white-5b5ec2307bf250.1327257915329367525077.jpg")}}class u{constructor(e){this.links=e}generateAnchorTag(e){return`<a href=${e.url}>${e.name}<img src=${e.svg}></a>`}element(e){e.setAttribute("style","");const t=this.links.map(e=>this.generateAnchorTag(e)).join("");e.setInnerContent(t,{html:!0})}}class c{element(e){e.setInnerContent("Mark Pedersen")}}class m{element(e){e.setAttribute("style","background-color:orange")}}async function p(e){let t=e.url;return await(t.endsWith("/links")?function(){let e=JSON.stringify(n);return new Response(e,{headers:{"content-type":"application/json"}})}():async function(){let e=await fetch("https://static-links-page.signalnerve.workers.dev");return(new HTMLRewriter).on("div#links",new i(n)).on("div#profile",new o).on("img#avatar",new l).on("h1#name",new s).on("div#social",new u(a)).on("title",new c).on("body",new m).transform(e)}())}addEventListener("fetch",e=>{e.respondWith(p(e.request))})}]);